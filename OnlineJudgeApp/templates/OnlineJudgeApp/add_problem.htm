{% extends 'OnlineJudgeApp/base.htm' %}
{% block title %}Add Problem{% endblock %}
{% block content %}
<div class="container">
	<form style="width:70%;min-width: 384px;max-width: 768px;margin: auto;">
		<div class="form-group row">
			<label for="problem-name" class="col-sm-4 col-form-label">Name</label>
			<div class="col-sm-8">
				<input type="text" class="form-control" id="problem-name" required>
			</div>
		</div>
		<div class="form-group row">
			<label for="problem-legend" class="col-sm-4 col-form-label">Legend</label>
			<div class="col-sm-8">
				<textarea class="form-control" id="problem-legend" rows="5" required></textarea>
				<small class="form-text text-muted">
					You may use LaTeX for rendering mathematical symbols.
				</small>
			</div>
		</div>
		<div class="form-group row">
			<label for="problem-tl" class="col-sm-4 col-form-label">Time Limit</label>
			<div class="col-sm-8">
				<input type="number" class="form-control" id="problem-tl" required min="250" max="10000">
				<small class="form-text text-muted">
					(in milliseconds)
				</small>
			</div>
		</div>
		<div class="form-group row">
			<label for="problem-ml" class="col-sm-4 col-form-label">Memory Limit</label>
			<div class="col-sm-8">
				<input type="number" class="form-control" id="problem-ml" required min="4" max="512">
				<small class="form-text text-muted">
					(in megabytes)
				</small>
			</div>
		</div>
		<div class="form-group row">
			<label for="problem-checker" class="col-sm-4 col-form-label">Problem Checker</label>
			<div class="col-sm-8">			
				<label class="custom-file">
					<input type="file" id="problem-checker" class="custom-file-input">
					<span class="custom-file-control"></span>
				</label>
				<small class="form-text text-muted">
					See <a href="#">example</a>.
				</small>
			</div>
		</div>

		<div class="text-center">
			<button type="submit" class="btn btn-primary">Add problem</button>		
		</div>
	</form>
</div>
{% endblock %}
{% block customjs %}
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script type="text/javascript" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
{% endblock %}